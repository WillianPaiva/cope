=head1 NAME

App::Cope::Manual - User guide for cope

=head1 DESCRIPTION

B<cope> is a wrapper around programs that output to a terminal, to
give them colour for utility and aesthetics while still keeping them
the same at the text level.

Adding colours on top of text makes it easy to see when something's
amiss. For utility, you can stop hunting through your terminal's
scroll buffer to locate an error when it's clearly highlighted in red,
or locating a network address hidden in dense output when they're marked
in yellow and blue (local and foreign, respectively). As for
aesthetics, even the simplest utility can be brightened up by adding a
dash of colour on top.

cope's scripts are written in Perl, so they're as flexible (and fast)
as Perl allows. See L<App::Cope> for more on that.

=head1 INSTALL

cope is not currently on the CPAN, so installation is the standard
4-command Perl install procedure:

- perl Makefile.PL

- make

- make test

- make install

There's a standard Perl location for putting extra files. You'll have
to ask Perl to tell you where it is, though:

    $ perl -MFile::ShareDir=dist_dir -e "print dist_dir('Cope').\$/"

Now all you need to do is add that directory to your C<$PATH>:

    OLDPATH=$PATH
    export PATH="/path/to/scripts/:$PATH"

And the programs in the scripts directory will automatically colourise
their counterparts.

=head1 RUNNING

Instead of filtering input through a single executable, cope provides
a directory of scripts that examine the $PATH variable, run the
original script, and process its output through a filter defined in
that file.

This has many benefits: it requires no configuration other than
changing the $PATH, automatically highlights output from processes
spawned by processes, and most shells won't know the difference in
terms of tab-completion on arguments.

=head1 LIMITATIONS

Although cope uses a pseudo-terminal to read its input, it doesn't
pretend to act like one. Applications that require a terminal to be
emulated - think editors, pagers, roguelikes - will fail miserably. If
you want to interact with one of them, write your own script using
L<Term::VT102> to parse the output.

=head1 TURNING FILTERING ON/OFF

To avoid clashes with other pipes, cope does not filter if its output
isn't going to a terminal.

The script L<nocope> runs a program without filtering it through cope,
by removing the scripts directory from the C<PATH>.

Also, the environment variable C<$NOCOPE> is handled by all the scripts
as to run the program without the filter.

=head1 SUPPORT

There is no "stable" version. cope is a relatively small program, and
the majority of changes are going to be for different scripts, rather
than changes to the main code, which is bound to be working more or
less correctly.

Support and information about cope can be found at:

=over 4

=item * cope's homepage

L<http://stuff.cytzol.org/cope/>

=item * cope's git repo

L<http://github.com/cytzol/cope/>

=back

Please report anything wrong at all: either a bug within cope, or if
something gets highlighted incorrectly, or even fails to be
highlighted at all.

=head1 AUTHOR

Benjamin Sago aka `cytzol' C<< <ben&cytzol,org> >>

=head1 COPYRIGHT & LICENCE

Copyright 2009 Benjamin Sago.

This program is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut

